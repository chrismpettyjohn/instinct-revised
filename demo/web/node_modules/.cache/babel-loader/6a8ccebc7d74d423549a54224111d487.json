{"ast":null,"code":"var _jsxFileName = \"/Users/cpettyjohn/Habbo/instinct-revised/packages/frontend/core/src/components/generic/api-wrapper/APIWrapper.tsx\";\nimport { Icon } from '../icon';\nimport { APIError } from '../error/APIError';\nimport React, { useEffect, useState } from 'react';\nimport { RenderError } from '../error/RenderError';\nexport function APIWrapper(props) {\n  const [state, setState] = useState();\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        setState(undefined);\n        const data = await props.promise(props.params);\n        setState(data);\n      } catch (e) {\n        setError(true);\n      }\n    }\n\n    fetchData();\n  }, [props.params]);\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(APIError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!state) {\n    return /*#__PURE__*/React.createElement(Icon, {\n      className: \"fa-spin\",\n      type: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 12\n      }\n    });\n  }\n\n  try {\n    return props.children(state);\n  } catch {\n    return /*#__PURE__*/React.createElement(RenderError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}