{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';export function createFetchHook(promise){var refresh=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var _useState=useState(),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];useEffect(function(){setState(undefined);function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return promise();case 2:data=_context.sent;setState(data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[refresh]);return state;}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct-revised/packages/frontend/frontend/src/hooks/fetch-hook.base.ts"],"names":["useEffect","useState","createFetchHook","promise","refresh","state","setState","undefined","fetchData","data"],"mappings":"0dAAA,OAAQA,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CAEA,MAAO,SAASC,CAAAA,eAAT,CACLC,OADK,CAGU,IADfC,CAAAA,OACe,2DADY,CACZ,eACWH,QAAQ,EADnB,wCACRI,KADQ,eACDC,QADC,eAGfN,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACC,SAAD,CAAR,CADc,QAECC,CAAAA,SAFD,qIAEd,kKACqBL,CAAAA,OAAO,EAD5B,QACQM,IADR,eAEEH,QAAQ,CAACG,IAAD,CAAR,CAFF,sDAFc,4CAOdD,SAAS,GACV,CARQ,CAQN,CAACJ,OAAD,CARM,CAAT,CAUA,MAAOC,CAAAA,KAAP,CACD","sourcesContent":["import {useEffect, useState} from 'react';\n\nexport function createFetchHook<T>(\n  promise: () => Promise<T>,\n  refresh: number | string = 0\n): T | undefined {\n  const [state, setState] = useState<T>();\n\n  useEffect(() => {\n    setState(undefined);\n    async function fetchData() {\n      const data = await promise();\n      setState(data);\n    }\n\n    fetchData();\n  }, [refresh]);\n\n  return state;\n}\n"]},"metadata":{},"sourceType":"module"}