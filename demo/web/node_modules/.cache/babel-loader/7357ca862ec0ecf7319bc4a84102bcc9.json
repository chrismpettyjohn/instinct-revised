{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./ClientActions.scss';import{useLocation}from'wouter';import{Icon}from'../../../generic/icon';import React,{useContext,useState}from'react';import{themeContext}from'../../../../context/theme';import{healthContext}from'../../../../context/health';export function ClientActions(){var _useLocation=useLocation(),_useLocation2=_slicedToArray(_useLocation,2),location=_useLocation2[0],setLocation=_useLocation2[1];var _useContext=useContext(healthContext),health=_useContext.health;var _useContext2=useContext(themeContext),showClient=_useContext2.showClient,setStore=_useContext2.setStore;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isExpanded=_useState2[0],setExpanded=_useState2[1];function toggleWebView(){setStore({showClient:!showClient});setLocation('/me');}function toggleFullScreen(){return _toggleFullScreen.apply(this,arguments);}function _toggleFullScreen(){_toggleFullScreen=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var action;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:action=isExpanded?document.exitFullscreen():document.body.requestFullscreen();_context.next=3;return action;case 3:setExpanded(!isExpanded);case 4:case\"end\":return _context.stop();}}},_callee);}));return _toggleFullScreen.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{className:\"actions\"},/*#__PURE__*/React.createElement(\"button\",{onClick:toggleWebView},\"Web\"),/*#__PURE__*/React.createElement(\"button\",{onClick:toggleFullScreen},/*#__PURE__*/React.createElement(Icon,{className:\"mr-0\",family:\"fas\",type:isExpanded?'compress':'expand'})),/*#__PURE__*/React.createElement(\"button\",{style:{cursor:'default'}},/*#__PURE__*/React.createElement(Icon,{family:\"fas\",type:\"user\"}),/*#__PURE__*/React.createElement(\"b\",null,health.usersOnline)));}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/frontend/src/components/template/client/client-actions/ClientActions.tsx"],"names":["useLocation","Icon","React","useContext","useState","themeContext","healthContext","ClientActions","location","setLocation","health","showClient","setStore","isExpanded","setExpanded","toggleWebView","toggleFullScreen","action","document","exitFullscreen","body","requestFullscreen","cursor","usersOnline"],"mappings":"kcAAA,MAAO,sBAAP,CACA,OAAQA,WAAR,KAA0B,QAA1B,CACA,OAAQC,IAAR,KAAmB,uBAAnB,CACA,MAAOC,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,QAA3B,KAA0C,OAA1C,CACA,OAAQC,YAAR,KAA2B,2BAA3B,CACA,OAAQC,aAAR,KAA4B,4BAA5B,CAEA,MAAO,SAASC,CAAAA,aAAT,EAAyB,kBACEP,WAAW,EADb,8CACvBQ,QADuB,kBACbC,WADa,kCAEbN,UAAU,CAACG,aAAD,CAFG,CAEvBI,MAFuB,aAEvBA,MAFuB,kBAGCP,UAAU,CAACE,YAAD,CAHX,CAGvBM,UAHuB,cAGvBA,UAHuB,CAGXC,QAHW,cAGXA,QAHW,eAIIR,QAAQ,CAAU,KAAV,CAJZ,wCAIvBS,UAJuB,eAIXC,WAJW,eAM9B,QAASC,CAAAA,aAAT,EAA+B,CAC7BH,QAAQ,CAAC,CAACD,UAAU,CAAE,CAACA,UAAd,CAAD,CAAR,CACAF,WAAW,CAAC,KAAD,CAAX,CACD,CAT6B,QAWfO,CAAAA,gBAXe,0JAW9B,8IACQC,MADR,CACgCJ,UAAU,CACpCK,QAAQ,CAACC,cAAT,EADoC,CAEpCD,QAAQ,CAACE,IAAT,CAAcC,iBAAd,EAHN,uBAKQJ,CAAAA,MALR,QAMEH,WAAW,CAAC,CAACD,UAAF,CAAX,CANF,sDAX8B,mDAoB9B,mBACE,2BAAK,SAAS,CAAC,SAAf,eACE,8BAAQ,OAAO,CAAEE,aAAjB,QADF,cAEE,8BAAQ,OAAO,CAAEC,gBAAjB,eACE,oBAAC,IAAD,EACE,SAAS,CAAC,MADZ,CAEE,MAAM,CAAC,KAFT,CAGE,IAAI,CAAEH,UAAU,CAAG,UAAH,CAAgB,QAHlC,EADF,CAFF,cASE,8BAAQ,KAAK,CAAE,CAACS,MAAM,CAAE,SAAT,CAAf,eACE,oBAAC,IAAD,EAAM,MAAM,CAAC,KAAb,CAAmB,IAAI,CAAC,MAAxB,EADF,cAEE,6BAAIZ,MAAM,CAACa,WAAX,CAFF,CATF,CADF,CAgBD","sourcesContent":["import './ClientActions.scss';\nimport {useLocation} from 'wouter';\nimport {Icon} from '../../../generic/icon';\nimport React, {useContext, useState} from 'react';\nimport {themeContext} from '../../../../context/theme';\nimport {healthContext} from '../../../../context/health';\n\nexport function ClientActions() {\n  const [location, setLocation] = useLocation();\n  const {health} = useContext(healthContext);\n  const {showClient, setStore} = useContext(themeContext);\n  const [isExpanded, setExpanded] = useState<boolean>(false);\n\n  function toggleWebView(): void {\n    setStore({showClient: !showClient});\n    setLocation('/me');\n  }\n\n  async function toggleFullScreen(): Promise<void> {\n    const action: Promise<void> = isExpanded\n      ? document.exitFullscreen()\n      : document.body.requestFullscreen();\n\n    await action;\n    setExpanded(!isExpanded);\n  }\n\n  return (\n    <div className=\"actions\">\n      <button onClick={toggleWebView}>Web</button>\n      <button onClick={toggleFullScreen}>\n        <Icon\n          className=\"mr-0\"\n          family=\"fas\"\n          type={isExpanded ? 'compress' : 'expand'}\n        />\n      </button>\n      <button style={{cursor: 'default'}}>\n        <Icon family=\"fas\" type=\"user\" />\n        <b>{health.usersOnline}</b>\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}