{"ast":null,"code":"var _jsxFileName = \"/Users/cpettyjohn/Habbo/instinct-revised/packages/frontend/hableet-theme/src/pages/community/news/view-article/create-comment-modal/CreateCommentModal.tsx\";\nimport React, { useState } from 'react';\nimport { articleService, Icon } from '@instinct-web/core';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nexport function CreateCommentModal({\n  article,\n  onCreation\n}) {\n  const [comment, setComment] = useState('');\n  const [isOpen, setModal] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  function toggle() {\n    setModal(_ => !_);\n  }\n\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    try {\n      setLoading(true);\n      const newComment = await articleService.createComment(article.id, {\n        content: comment\n      });\n      onCreation(newComment);\n      setComment('');\n      setModal(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const [buttonIcon, buttonText] = isLoading ? ['spinner fa-spin', 'Posting Comment...'] : ['save', 'Post Comment'];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-dark\",\n    onClick: toggle,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Post Comment\"), isOpen && /*#__PURE__*/React.createElement(Modal, {\n    isOpen: true,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Commenting on \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }\n  }, article.title)), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"What do you want to say?\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ModalFooter, {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    disabled: isLoading,\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: buttonIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }), buttonText))));\n}","map":null,"metadata":{},"sourceType":"module"}