{"ast":null,"code":"// @ts-ignore this dependency does not support Typescript\nimport Flash from'swfobject';import React,{useContext,useEffect}from'react';import{configContext}from'../../../../context/config';import{sessionContext}from'../../../../context/session';import{useRenewSessionSSO}from'../../../../hooks/session';export function ClientContainer(){useRenewSessionSSO();var _useContext=useContext(sessionContext),user=_useContext.user,sso=_useContext.sso;var _useContext2=useContext(configContext),config=_useContext2.config;useEffect(function(){function setupGame(){var variables={'connection.info.host':config.emulatorIP,'connection.info.port':config.emulatorPort,'url.prefix':config.siteLink,'site.url':config.siteLink,'client.reload.url':\"\".concat(config.siteLink,\"/client\"),'client.fatal.error.url':\"\".concat(config.siteLink,\"/client\"),'client.connection.failed.url':\"\".concat(config.siteLink,\"/client\"),'external.variables.txt':config.swfExternalVariables,'external.texts.txt':config.swfExternalTexts,'productdata.load.url':config.swfProductData,'furnidata.load.url':config.swfFurniData,'external.figurepartlist.txt':config.swfFigureData,'external.override.variables.txt':\"\".concat(config.swfBaseURL,\"}/override/variables.txt\"),'flash.client.url':config.swfBaseURL,'client.starting.revolving':config.loadingMessage,'processlog.enabled':'1','use.sso.ticket':'1','sso.ticket':sso,'flash.client.origin':'popup','client.allow.cross.domain':'1','client.notify.cross.domain':'0'};var parameters={base:config.swfBaseURL,allowScriptAccess:'always',menu:'false'};Flash.embedSWF(user.rank.permissions.websiteAdminClient?config.swfAdminHabbo:config.swfHabbo,'client-area','100%','100%','10.0.0','',variables,parameters,null);}if(sso!==undefined){setupGame();}},[config,sso]);return/*#__PURE__*/React.createElement(\"div\",{id:\"client-area\"});}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/frontend/src/components/template/client/client-container/ClientContainer.tsx"],"names":["Flash","React","useContext","useEffect","configContext","sessionContext","useRenewSessionSSO","ClientContainer","user","sso","config","setupGame","variables","emulatorIP","emulatorPort","siteLink","swfExternalVariables","swfExternalTexts","swfProductData","swfFurniData","swfFigureData","swfBaseURL","loadingMessage","parameters","base","allowScriptAccess","menu","embedSWF","rank","permissions","websiteAdminClient","swfAdminHabbo","swfHabbo","undefined"],"mappings":"AAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,WAAlB,CACA,MAAOC,CAAAA,KAAP,EAAeC,UAAf,CAA2BC,SAA3B,KAA2C,OAA3C,CACA,OAAQC,aAAR,KAA4B,4BAA5B,CACA,OAAQC,cAAR,KAA6B,6BAA7B,CACA,OAAQC,kBAAR,KAAiC,2BAAjC,CAEA,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChCD,kBAAkB,GADc,gBAEZJ,UAAU,CAACG,cAAD,CAFE,CAEzBG,IAFyB,aAEzBA,IAFyB,CAEnBC,GAFmB,aAEnBA,GAFmB,kBAGfP,UAAU,CAACE,aAAD,CAHK,CAGzBM,MAHyB,cAGzBA,MAHyB,CAKhCP,SAAS,CAAC,UAAM,CACd,QAASQ,CAAAA,SAAT,EAA2B,CACzB,GAAMC,CAAAA,SAAiC,CAAG,CACxC,uBAAwBF,MAAM,CAACG,UADS,CAExC,uBAAwBH,MAAM,CAACI,YAFS,CAGxC,aAAcJ,MAAM,CAACK,QAHmB,CAIxC,WAAYL,MAAM,CAACK,QAJqB,CAKxC,8BAAwBL,MAAM,CAACK,QAA/B,WALwC,CAMxC,mCAA6BL,MAAM,CAACK,QAApC,WANwC,CAOxC,yCAAmCL,MAAM,CAACK,QAA1C,WAPwC,CAQxC,yBAA0BL,MAAM,CAACM,oBARO,CASxC,qBAAsBN,MAAM,CAACO,gBATW,CAUxC,uBAAwBP,MAAM,CAACQ,cAVS,CAWxC,qBAAsBR,MAAM,CAACS,YAXW,CAYxC,8BAA+BT,MAAM,CAACU,aAZE,CAaxC,4CAAsCV,MAAM,CAACW,UAA7C,4BAbwC,CAcxC,mBAAoBX,MAAM,CAACW,UAda,CAexC,4BAA6BX,MAAM,CAACY,cAfI,CAgBxC,qBAAsB,GAhBkB,CAiBxC,iBAAkB,GAjBsB,CAkBxC,aAAcb,GAlB0B,CAmBxC,sBAAuB,OAnBiB,CAoBxC,4BAA6B,GApBW,CAqBxC,6BAA8B,GArBU,CAA1C,CAwBA,GAAMc,CAAAA,UAAkC,CAAG,CACzCC,IAAI,CAAEd,MAAM,CAACW,UAD4B,CAEzCI,iBAAiB,CAAE,QAFsB,CAGzCC,IAAI,CAAE,OAHmC,CAA3C,CAMA1B,KAAK,CAAC2B,QAAN,CACEnB,IAAI,CAAEoB,IAAN,CAAYC,WAAZ,CAAwBC,kBAAxB,CACIpB,MAAM,CAACqB,aADX,CAEIrB,MAAM,CAACsB,QAHb,CAIE,aAJF,CAKE,MALF,CAME,MANF,CAOE,QAPF,CAQE,EARF,CASEpB,SATF,CAUEW,UAVF,CAWE,IAXF,EAaD,CAED,GAAId,GAAG,GAAKwB,SAAZ,CAAuB,CACrBtB,SAAS,GACV,CACF,CAlDQ,CAkDN,CAACD,MAAD,CAASD,GAAT,CAlDM,CAAT,CAoDA,mBAAO,2BAAK,EAAE,CAAC,aAAR,EAAP,CACD","sourcesContent":["// @ts-ignore this dependency does not support Typescript\nimport Flash from 'swfobject';\nimport React, {useContext, useEffect} from 'react';\nimport {configContext} from '../../../../context/config';\nimport {sessionContext} from '../../../../context/session';\nimport {useRenewSessionSSO} from '../../../../hooks/session';\n\nexport function ClientContainer() {\n  useRenewSessionSSO();\n  const {user, sso} = useContext(sessionContext);\n  const {config} = useContext(configContext);\n\n  useEffect(() => {\n    function setupGame(): void {\n      const variables: Record<string, string> = {\n        'connection.info.host': config.emulatorIP,\n        'connection.info.port': config.emulatorPort,\n        'url.prefix': config.siteLink,\n        'site.url': config.siteLink,\n        'client.reload.url': `${config.siteLink}/client`,\n        'client.fatal.error.url': `${config.siteLink}/client`,\n        'client.connection.failed.url': `${config.siteLink}/client`,\n        'external.variables.txt': config.swfExternalVariables,\n        'external.texts.txt': config.swfExternalTexts,\n        'productdata.load.url': config.swfProductData,\n        'furnidata.load.url': config.swfFurniData,\n        'external.figurepartlist.txt': config.swfFigureData,\n        'external.override.variables.txt': `${config.swfBaseURL}}/override/variables.txt`,\n        'flash.client.url': config.swfBaseURL,\n        'client.starting.revolving': config.loadingMessage,\n        'processlog.enabled': '1',\n        'use.sso.ticket': '1',\n        'sso.ticket': sso!,\n        'flash.client.origin': 'popup',\n        'client.allow.cross.domain': '1',\n        'client.notify.cross.domain': '0',\n      };\n\n      const parameters: Record<string, string> = {\n        base: config.swfBaseURL,\n        allowScriptAccess: 'always',\n        menu: 'false',\n      };\n\n      Flash.embedSWF(\n        user!.rank!.permissions.websiteAdminClient\n          ? config.swfAdminHabbo\n          : config.swfHabbo,\n        'client-area',\n        '100%',\n        '100%',\n        '10.0.0',\n        '',\n        variables,\n        parameters,\n        null\n      );\n    }\n\n    if (sso !== undefined) {\n      setupGame();\n    }\n  }, [config, sso]);\n\n  return <div id=\"client-area\" />;\n}\n"]},"metadata":{},"sourceType":"module"}