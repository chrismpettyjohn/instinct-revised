{"ast":null,"code":"/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n  /**\n   * @returns {void}\n   */\n\n  function debounced() {\n    const context = this;\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n\n  return debounced;\n}\n\nmodule.exports = debounce;","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct-revised/node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/utils/debounce.js"],"names":["debounce","fn","wait","timer","debounced","context","args","arguments","clearTimeout","setTimeout","apply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,CAAkBC,EAAlB,EAAsBC,IAAtB,EAA4B;AAC1B;AACF;AACA;AACA;AACE,MAAIC,KAAJ;AAEA;AACF;AACA;;AACE,WAASC,SAAT,GAAqB;AACnB,UAAMC,OAAO,GAAG,IAAhB;AACA,UAAMC,IAAI,GAAGC,SAAb;AAEAC,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACAA,IAAAA,KAAK,GAAGM,UAAU,CAAC,YAAY;AAC7B,aAAOR,EAAE,CAACS,KAAH,CAASL,OAAT,EAAkBC,IAAlB,CAAP;AACD,KAFiB,EAEfJ,IAFe,CAAlB;AAGD;;AAED,SAAOE,SAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBZ,QAAjB","sourcesContent":["/**\n * Debounce a function to delay invoking until wait (ms) have elapsed since the last invocation.\n * @param {function(...*): *} fn The function to be debounced.\n * @param {number} wait Milliseconds to wait before invoking again.\n * @return {function(...*): void} The debounced function.\n */\nfunction debounce(fn, wait) {\n  /**\n   * A cached setTimeout handler.\n   * @type {number | undefined}\n   */\n  let timer;\n\n  /**\n   * @returns {void}\n   */\n  function debounced() {\n    const context = this;\n    const args = arguments;\n\n    clearTimeout(timer);\n    timer = setTimeout(function () {\n      return fn.apply(context, args);\n    }, wait);\n  }\n\n  return debounced;\n}\n\nmodule.exports = debounce;\n"]},"metadata":{},"sourceType":"script"}