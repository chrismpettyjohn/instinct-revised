{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import{groupService}from'../../services/group';export function useFetchGroupByID(groupID){var _useState=useState(),_useState2=_slicedToArray(_useState,2),group=_useState2[0],setGroup=_useState2[1];useEffect(function(){setGroup(undefined);function fetchGroup(){return _fetchGroup.apply(this,arguments);}function _fetchGroup(){_fetchGroup=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var groupData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return groupService.getByID(groupID);case 2:groupData=_context.sent;setGroup(groupData);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchGroup.apply(this,arguments);}fetchGroup();},[groupID]);return group;}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/frontend/src/hooks/group/fetch-group-by-id.ts"],"names":["useEffect","useState","groupService","useFetchGroupByID","groupID","group","setGroup","undefined","fetchGroup","getByID","groupData"],"mappings":"kcACA,OAAQA,SAAR,CAAmBC,QAAnB,KAAkC,OAAlC,CACA,OAAQC,YAAR,KAA2B,sBAA3B,CAEA,MAAO,SAASC,CAAAA,iBAAT,CAA2BC,OAA3B,CAA+D,eAC1CH,QAAQ,EADkC,wCAC7DI,KAD6D,eACtDC,QADsD,eAGpEN,SAAS,CAAC,UAAM,CACdM,QAAQ,CAACC,SAAD,CAAR,CADc,QAECC,CAAAA,UAFD,wIAEd,uKAC0BN,CAAAA,YAAY,CAACO,OAAb,CAAqBL,OAArB,CAD1B,QACQM,SADR,eAEEJ,QAAQ,CAACI,SAAD,CAAR,CAFF,sDAFc,6CAOdF,UAAU,GACX,CARQ,CAQN,CAACJ,OAAD,CARM,CAAT,CAUA,MAAOC,CAAAA,KAAP,CACD","sourcesContent":["import {Group} from '@instinct-prj/interface';\nimport {useEffect, useState} from 'react';\nimport {groupService} from '../../services/group';\n\nexport function useFetchGroupByID(groupID: string): Group | undefined {\n  const [group, setGroup] = useState<Group>();\n\n  useEffect(() => {\n    setGroup(undefined);\n    async function fetchGroup() {\n      const groupData = await groupService.getByID(groupID);\n      setGroup(groupData);\n    }\n\n    fetchGroup();\n  }, [groupID]);\n\n  return group;\n}\n"]},"metadata":{},"sourceType":"module"}