{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{backendAPI}from'../../api';var PhotoService=/*#__PURE__*/function(){function PhotoService(){_classCallCheck(this,PhotoService);}_createClass(PhotoService,[{key:\"getAll\",value:function(){var _getAll=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var photos;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return backendAPI.get('photos');case 2:photos=_context.sent;return _context.abrupt(\"return\",photos.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function getAll(){return _getAll.apply(this,arguments);}return getAll;}()},{key:\"getByID\",value:function(){var _getByID=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(photoID){var photo;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return backendAPI.get(\"photos/\".concat(photoID));case 2:photo=_context2.sent;return _context2.abrupt(\"return\",photo.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function getByID(_x){return _getByID.apply(this,arguments);}return getByID;}()}]);return PhotoService;}();export var photoService=new PhotoService();","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/frontend/src/services/photo/Photo.ts"],"names":["backendAPI","PhotoService","get","photos","data","photoID","photo","photoService"],"mappings":"ulBAEA,OAAQA,UAAR,KAAyB,WAAzB,C,GAGMC,CAAAA,Y,uXAE2CD,CAAAA,UAAU,CAACE,GAAX,CAAe,QAAf,C,QAAvCC,M,+CACCA,MAAM,CAACC,I,6PAGFC,O,uJAC8BL,CAAAA,UAAU,CAACE,GAAX,kBAC9BG,OAD8B,E,QAApCC,K,iDAGCA,KAAK,CAACF,I,uKAIjB,MAAO,IAAMG,CAAAA,YAAwB,CAAG,GAAIN,CAAAA,YAAJ,EAAjC","sourcesContent":["import {PhotoTypes} from './';\nimport {AxiosResponse} from 'axios';\nimport {backendAPI} from '../../api';\nimport {Photo} from '@instinct-prj/interface';\n\nclass PhotoService implements PhotoTypes {\n  async getAll() {\n    const photos: AxiosResponse<Photo[]> = await backendAPI.get('photos');\n    return photos.data;\n  }\n\n  async getByID(photoID: string) {\n    const photo: AxiosResponse<Photo> = await backendAPI.get(\n      `photos/${photoID}`\n    );\n    return photo.data;\n  }\n}\n\nexport const photoService: PhotoTypes = new PhotoService();\n"]},"metadata":{},"sourceType":"module"}