{"ast":null,"code":"import EventEmitter from 'events';\nimport { ClientEvent } from './';\n\nclass ClientServiceImplementation {\n  // @ts-ignore - Unsure why this isn't working\n  constructor() {\n    this.eventListener = new EventEmitter();\n\n    if (window.FlashExternalInterface === undefined) {\n      window.FlashExternalInterface = {};\n    }\n\n    window.FlashExternalInterface.logLoginStep = step => {\n      const stepToProgress = {\n        'client.init.swf.loaded': 10,\n        'client.init.core.init': 15,\n        'client.init.socket.ok': 25,\n        'client.init.handshake.start': 30,\n        'client.init.auth.ok': 50,\n        'client.init.localization.loaded': 60,\n        'client.init.core.running': 75,\n        'client.init.config.loaded': 80,\n        'client.init.room.ready': 90,\n        'client.init.room.enter': 100\n      };\n\n      if (stepToProgress[step]) {\n        var _stepToProgress$step;\n\n        const progress = (_stepToProgress$step = stepToProgress[step]) !== null && _stepToProgress$step !== void 0 ? _stepToProgress$step : 0;\n        this.eventListener.emit(ClientEvent.LOADING_PROGRESS, progress);\n\n        if (progress === 100) {\n          this.eventListener.emit(ClientEvent.ENTERED_HOTEL);\n        }\n      }\n    };\n  }\n\n  enterRoom(roomID) {\n    return document.getElementById('client-area').openlink('navigator/goto/' + roomID);\n  }\n\n}\n\nexport const clientService = new ClientServiceImplementation();","map":null,"metadata":{},"sourceType":"module"}