{"ast":null,"code":"/**\n * Gets the source (i.e. host) of the script currently running.\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to get the current running script,\n  // but is not supported in all browsers (most notably, IE).\n  if (document.currentScript) {\n    return document.currentScript.getAttribute('src');\n  } // Fallback to getting all scripts running in the document.\n\n\n  const scriptElements = document.scripts || [];\n  const currentScript = scriptElements[scriptElements.length - 1];\n\n  if (currentScript) {\n    return currentScript.getAttribute('src');\n  }\n\n  throw new Error('[React Refresh] Failed to get current script source!');\n}\n\nmodule.exports = getCurrentScriptSource;","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct-revised/node_modules/@pmmmwh/react-refresh-webpack-plugin/sockets/utils/getCurrentScriptSource.js"],"names":["getCurrentScriptSource","document","currentScript","getAttribute","scriptElements","scripts","length","Error","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,sBAAT,GAAkC;AAChC;AACA;AACA,MAAIC,QAAQ,CAACC,aAAb,EAA4B;AAC1B,WAAOD,QAAQ,CAACC,aAAT,CAAuBC,YAAvB,CAAoC,KAApC,CAAP;AACD,GAL+B,CAOhC;;;AACA,QAAMC,cAAc,GAAGH,QAAQ,CAACI,OAAT,IAAoB,EAA3C;AACA,QAAMH,aAAa,GAAGE,cAAc,CAACA,cAAc,CAACE,MAAf,GAAwB,CAAzB,CAApC;;AACA,MAAIJ,aAAJ,EAAmB;AACjB,WAAOA,aAAa,CAACC,YAAd,CAA2B,KAA3B,CAAP;AACD;;AAED,QAAM,IAAII,KAAJ,CAAU,sDAAV,CAAN;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBT,sBAAjB","sourcesContent":["/**\n * Gets the source (i.e. host) of the script currently running.\n * @returns {string}\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to get the current running script,\n  // but is not supported in all browsers (most notably, IE).\n  if (document.currentScript) {\n    return document.currentScript.getAttribute('src');\n  }\n\n  // Fallback to getting all scripts running in the document.\n  const scriptElements = document.scripts || [];\n  const currentScript = scriptElements[scriptElements.length - 1];\n  if (currentScript) {\n    return currentScript.getAttribute('src');\n  }\n\n  throw new Error('[React Refresh] Failed to get current script source!');\n}\n\nmodule.exports = getCurrentScriptSource;\n"]},"metadata":{},"sourceType":"script"}