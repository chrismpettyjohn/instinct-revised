{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Icon,Input,Row,sessionService}from'@instinct-prj/frontend';import{defaultEmailPreferencesState}from'./Email.types';export function EmailPreferences(){var _useState=useState(defaultEmailPreferencesState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var isDisabled=!state.email||!state.password;function updateField(key,value){setState(_objectSpread(_objectSpread({},state),{},_defineProperty({},key,value)));}function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setState(function(_){return _objectSpread(_objectSpread({},_),{},{showError:false,showSpinner:true});});_context.prev=1;_context.next=4;return sessionService.updateEmail(state.password,state.email);case 4:updateField('showCompletion',true);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);setState(function(_){return _objectSpread(_objectSpread({},_),{},{showError:true,showSpinner:false});});case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return _onSubmit.apply(this,arguments);}if(state.showCompletion){return/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-thumbs-up fa-5x\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Your email has been changed to \",/*#__PURE__*/React.createElement(\"b\",null,state.email),\"!\"));}return/*#__PURE__*/React.createElement(Form,{className:\"\",onSubmit:onSubmit},state.showError&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\"},/*#__PURE__*/React.createElement(\"h4\",null,\"There was a problem changing your email\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",{className:\"form-subcategory\"},\"Current Password\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"column-2\"},/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"password\",placeholder:\"Enter your current password\",value:state.password,onChange:updateField})))),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-5\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"form-subcategory\"},\"New email\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"column-2\"},/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"email\",placeholder:\"Enter your new email\",value:state.email,onChange:updateField})))),/*#__PURE__*/React.createElement(\"div\",{className:\"submit-button\"},/*#__PURE__*/React.createElement(\"button\",{className:\"rounded-button grey\",disabled:isDisabled,type:\"submit\"},state.showSpinner?/*#__PURE__*/React.createElement(Icon,{className:\"fa-spin\",type:\"spinner\"}):'Save')));}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/modern-theme/src/pages/home/preferences/tabs/email/Email.tsx"],"names":["React","useState","Form","Icon","Input","Row","sessionService","defaultEmailPreferencesState","EmailPreferences","state","setState","isDisabled","email","password","updateField","key","value","onSubmit","_","showError","showSpinner","updateEmail","showCompletion"],"mappings":"ivBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,CAAcC,IAAd,CAAoBC,KAApB,CAA2BC,GAA3B,CAAgCC,cAAhC,KAAqD,wBAArD,CACA,OAEEC,4BAFF,KAGO,eAHP,CAKA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,eACPP,QAAQ,CAChCM,4BADgC,CADD,wCAC1BE,KAD0B,eACnBC,QADmB,eAKjC,GAAMC,CAAAA,UAAmB,CAAG,CAACF,KAAK,CAACG,KAAP,EAAgB,CAACH,KAAK,CAACI,QAAnD,CAEA,QAASC,CAAAA,WAAT,CACEC,GADF,CAEEC,KAFF,CAGQ,CACNN,QAAQ,gCACHD,KADG,wBAELM,GAFK,CAECC,KAFD,GAAR,CAID,CAfgC,QAiBlBC,CAAAA,QAjBkB,kIAiBjC,mIACEP,QAAQ,CAAC,SAAAQ,CAAC,wCACLA,CADK,MAERC,SAAS,CAAE,KAFH,CAGRC,WAAW,CAAE,IAHL,IAAF,CAAR,CADF,sCAQUd,CAAAA,cAAc,CAACe,WAAf,CAA2BZ,KAAK,CAACI,QAAjC,CAA2CJ,KAAK,CAACG,KAAjD,CARV,QASIE,WAAW,CAAC,gBAAD,CAAmB,IAAnB,CAAX,CATJ,+EAWIJ,QAAQ,CAAC,SAAAQ,CAAC,wCACLA,CADK,MAERC,SAAS,CAAE,IAFH,CAGRC,WAAW,CAAE,KAHL,IAAF,CAAR,CAXJ,oEAjBiC,2CAoCjC,GAAIX,KAAK,CAACa,cAAV,CAA0B,CACxB,mBACE,2BAAK,SAAS,CAAC,aAAf,eACE,yBAAG,SAAS,CAAC,uBAAb,EADF,cAEE,4EACiC,6BAAIb,KAAK,CAACG,KAAV,CADjC,KAFF,CADF,CAQD,CAED,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,EAAhB,CAAmB,QAAQ,CAAEK,QAA7B,EACGR,KAAK,CAACU,SAAN,eACC,2BAAK,SAAS,CAAC,oBAAf,eACE,wEADF,CAFJ,cAME,4CACE,0BAAI,SAAS,CAAC,kBAAd,qBADF,cAEE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,6BAHd,CAIE,KAAK,CAAEV,KAAK,CAACI,QAJf,CAKE,QAAQ,CAAEC,WALZ,EADF,CADF,CAFF,CANF,cAoBE,2BAAK,SAAS,CAAC,MAAf,eACE,0BAAI,SAAS,CAAC,kBAAd,cADF,cAEE,oBAAC,GAAD,mBACE,2BAAK,SAAS,CAAC,UAAf,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,OAFP,CAGE,WAAW,CAAC,sBAHd,CAIE,KAAK,CAAEL,KAAK,CAACG,KAJf,CAKE,QAAQ,CAAEE,WALZ,EADF,CADF,CAFF,CApBF,cAkCE,2BAAK,SAAS,CAAC,eAAf,eACE,8BACE,SAAS,CAAC,qBADZ,CAEE,QAAQ,CAAEH,UAFZ,CAGE,IAAI,CAAC,QAHP,EAKGF,KAAK,CAACW,WAAN,cACC,oBAAC,IAAD,EAAM,SAAS,CAAC,SAAhB,CAA0B,IAAI,CAAC,SAA/B,EADD,CAGC,MARJ,CADF,CAlCF,CADF,CAkDD","sourcesContent":["import React, {useState} from 'react';\nimport {Form, Icon, Input, Row, sessionService} from '@instinct-prj/frontend';\nimport {\n  EmailPreferencesState,\n  defaultEmailPreferencesState,\n} from './Email.types';\n\nexport function EmailPreferences() {\n  const [state, setState] = useState<EmailPreferencesState>(\n    defaultEmailPreferencesState\n  );\n\n  const isDisabled: boolean = !state.email || !state.password;\n\n  function updateField<K extends keyof EmailPreferencesState>(\n    key: K,\n    value: EmailPreferencesState[K]\n  ): void {\n    setState({\n      ...state,\n      [key]: value,\n    });\n  }\n\n  async function onSubmit(): Promise<void> {\n    setState(_ => ({\n      ..._,\n      showError: false,\n      showSpinner: true,\n    }));\n\n    try {\n      await sessionService.updateEmail(state.password, state.email);\n      updateField('showCompletion', true);\n    } catch {\n      setState(_ => ({\n        ..._,\n        showError: true,\n        showSpinner: false,\n      }));\n    }\n  }\n\n  if (state.showCompletion) {\n    return (\n      <div className=\"text-center\">\n        <i className=\"fa fa-thumbs-up fa-5x\" />\n        <p>\n          Your email has been changed to <b>{state.email}</b>!\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <Form className=\"\" onSubmit={onSubmit}>\n      {state.showError && (\n        <div className=\"alert alert-danger\">\n          <h4>There was a problem changing your email</h4>\n        </div>\n      )}\n      <div>\n        <h4 className=\"form-subcategory\">Current Password</h4>\n        <Row>\n          <div className=\"column-2\">\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter your current password\"\n              value={state.password}\n              onChange={updateField}\n            />\n          </div>\n        </Row>\n      </div>\n      <div className=\"mt-5\">\n        <h4 className=\"form-subcategory\">New email</h4>\n        <Row>\n          <div className=\"column-2\">\n            <Input\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Enter your new email\"\n              value={state.email}\n              onChange={updateField}\n            />\n          </div>\n        </Row>\n      </div>\n      <div className=\"submit-button\">\n        <button\n          className=\"rounded-button grey\"\n          disabled={isDisabled}\n          type=\"submit\"\n        >\n          {state.showSpinner ? (\n            <Icon className=\"fa-spin\" type=\"spinner\" />\n          ) : (\n            'Save'\n          )}\n        </button>\n      </div>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}