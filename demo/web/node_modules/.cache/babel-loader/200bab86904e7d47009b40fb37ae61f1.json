{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import{backendAPI}from'../../api';var ConfigServiceImplementation=/*#__PURE__*/function(){function ConfigServiceImplementation(){_classCallCheck(this,ConfigServiceImplementation);}_createClass(ConfigServiceImplementation,[{key:\"getConfig\",value:function(){var _getConfig=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return backendAPI.get('config');case 2:config=_context.sent;return _context.abrupt(\"return\",config.data);case 4:case\"end\":return _context.stop();}}},_callee);}));function getConfig(){return _getConfig.apply(this,arguments);}return getConfig;}()},{key:\"getFullConfig\",value:function(){var _getFullConfig=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var config;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return backendAPI.get('config/full');case 2:config=_context2.sent;return _context2.abrupt(\"return\",config.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));function getFullConfig(){return _getFullConfig.apply(this,arguments);}return getFullConfig;}()},{key:\"updateConfig\",value:function(){var _updateConfig=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(config){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return backendAPI.post('config',config);case 2:case\"end\":return _context3.stop();}}},_callee3);}));function updateConfig(_x){return _updateConfig.apply(this,arguments);}return updateConfig;}()},{key:\"getHealth\",value:function(){var _getHealth=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var health;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return backendAPI.get('health');case 2:health=_context4.sent;return _context4.abrupt(\"return\",health.data);case 4:case\"end\":return _context4.stop();}}},_callee4);}));function getHealth(){return _getHealth.apply(this,arguments);}return getHealth;}()}]);return ConfigServiceImplementation;}();export var configService=new ConfigServiceImplementation();","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct-revised/packages/frontend/frontend/src/services/config/Config.ts"],"names":["backendAPI","ConfigServiceImplementation","get","config","data","post","health","configService"],"mappings":"unBAEA,OAAQA,UAAR,KAAyB,WAAzB,C,GAGMC,CAAAA,2B,sQACJ,oKAC8CD,CAAAA,UAAU,CAACE,GAAX,CAAe,QAAf,CAD9C,QACQC,MADR,+CAESA,MAAM,CAACC,IAFhB,wD,wMAKA,0KACiDJ,CAAAA,UAAU,CAACE,GAAX,CAC7C,aAD6C,CADjD,QACQC,MADR,iDAISA,MAAM,CAACC,IAJhB,0D,kNAOA,kBAAmBD,MAAnB,6IACQH,CAAAA,UAAU,CAACK,IAAX,CAAgB,QAAhB,CAA0BF,MAA1B,CADR,yD,2MAIA,0KAC8CH,CAAAA,UAAU,CAACE,GAAX,CAAe,QAAf,CAD9C,QACQI,MADR,iDAESA,MAAM,CAACF,IAFhB,0D,gIAMF,MAAO,IAAMG,CAAAA,aAA4B,CAAG,GAAIN,CAAAA,2BAAJ,EAArC","sourcesContent":["import {ConfigService} from './';\nimport {AxiosResponse} from 'axios';\nimport {backendAPI} from '../../api';\nimport {Config, ConfigDTO, Health} from '@instinct-prj/interface';\n\nclass ConfigServiceImplementation implements ConfigService {\n  async getConfig(): Promise<Config> {\n    const config: AxiosResponse<Config> = await backendAPI.get('config');\n    return config.data;\n  }\n\n  async getFullConfig(): Promise<ConfigDTO> {\n    const config: AxiosResponse<ConfigDTO> = await backendAPI.get(\n      'config/full'\n    );\n    return config.data;\n  }\n\n  async updateConfig(config: ConfigDTO): Promise<void> {\n    await backendAPI.post('config', config);\n  }\n\n  async getHealth(): Promise<Health> {\n    const health: AxiosResponse<Health> = await backendAPI.get('health');\n    return health.data;\n  }\n}\n\nexport const configService: ConfigService = new ConfigServiceImplementation();\n"]},"metadata":{},"sourceType":"module"}