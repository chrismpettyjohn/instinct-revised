{"ast":null,"code":"import { backendAPI } from '../../api';\n\nclass ArticleService {\n  async getAll() {\n    const articles = await backendAPI.get('articles');\n    return articles.data;\n  }\n\n  async getByID(articleID) {\n    const article = await backendAPI.get(`articles/${articleID}`);\n    return article.data;\n  }\n\n  async create(articleDTO) {\n    const article = await backendAPI.post('articles', { ...articleDTO\n    });\n    return article.data;\n  }\n\n  async updateByID(articleID, articleDTO) {\n    await backendAPI.patch(`articles/${articleID}`, { ...articleDTO\n    });\n  }\n\n  async deleteByID(articleID) {\n    await backendAPI.delete(`articles/${articleID}`);\n  }\n\n  async getAllCategories() {\n    const categories = await backendAPI.get('categories');\n    return categories.data;\n  }\n\n  async createCategory(name, color) {\n    const newCategory = await backendAPI.post('categories', {\n      name,\n      color\n    });\n    return newCategory.data;\n  }\n\n  async deleteCategoryByID(categoryID) {\n    await backendAPI.delete(`categories/${categoryID}`);\n  }\n\n  async createComment(articleID, commentDTO) {\n    const newComment = await backendAPI.post(`articles/${articleID}/comments`, commentDTO);\n    return newComment.data;\n  }\n\n  async deleteComment(articleID, commentID) {\n    await backendAPI.delete(`articles/${articleID}/comments/${commentID}`);\n  }\n\n}\n\nexport const articleService = new ArticleService();","map":null,"metadata":{},"sourceType":"module"}