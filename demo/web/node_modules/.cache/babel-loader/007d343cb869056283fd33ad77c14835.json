{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Icon}from'../../generic/icon';import{Form,Input}from'../../generic/form';import{sessionService}from'../../../services/session';import{ModalOverlay}from'../../generic/modal/modal-overlay';import{defaultForgotPasswordModalState}from'./ForgotPasswordModal.types';export function ForgotPasswordModal(_ref){var isOpen=_ref.isOpen,onToggle=_ref.onToggle;var _useState=useState(defaultForgotPasswordModalState),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];function setValue(key,value){setState(function(_){return _objectSpread(_objectSpread({},_),{},_defineProperty({},key,value));});}function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setState(function(_){return _objectSpread(_objectSpread({},_),{},{showError:false,showSpinner:true});});_context.prev=1;_context.next=4;return sessionService.generateForgotPasswordToken(state.email);case 4:setValue('showCompletion',true);_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);setState(function(_){return _objectSpread(_objectSpread({},_),{},{showError:true,showSpinner:false});});case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(ModalOverlay,{isOpen:isOpen,onToggle:onToggle,header:\"Password Reset\"},state.showCompletion&&/*#__PURE__*/React.createElement(\"div\",{className:\"text-center\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-thumbs-up fa-3x\"}),/*#__PURE__*/React.createElement(\"p\",null,\"Please check your inbox for an email containing your password reset link.\")),!state.showCompletion&&/*#__PURE__*/React.createElement(Form,{className:\"login-form\",onSubmit:onSubmit},state.showError&&/*#__PURE__*/React.createElement(\"div\",{className:\"alert-danger\"},\"Your password could not be reset at this time\"),/*#__PURE__*/React.createElement(\"label\",{className:\"username-input\"},/*#__PURE__*/React.createElement(Input,{name:\"email\",placeholder:\"Email\",value:state.email,onChange:setValue,type:\"email\"}),/*#__PURE__*/React.createElement(Icon,{type:\"email\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"rounded-button blue plain\",type:\"submit\",disabled:!state.email},\"Submit\")));}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/frontend/src/components/template/forgot-password-modal/ForgotPasswordModal.tsx"],"names":["React","useState","Icon","Form","Input","sessionService","ModalOverlay","defaultForgotPasswordModalState","ForgotPasswordModal","isOpen","onToggle","state","setState","setValue","key","value","_","onSubmit","showError","showSpinner","generateForgotPasswordToken","email","showCompletion"],"mappings":"ivBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,IAAR,KAAmB,oBAAnB,CACA,OAAQC,IAAR,CAAcC,KAAd,KAA0B,oBAA1B,CACA,OAAQC,cAAR,KAA6B,2BAA7B,CACA,OAAQC,YAAR,KAA2B,mCAA3B,CACA,OACEC,+BADF,KAIO,6BAJP,CAMA,MAAO,SAASC,CAAAA,mBAAT,MAGsB,IAF3BC,CAAAA,MAE2B,MAF3BA,MAE2B,CAD3BC,QAC2B,MAD3BA,QAC2B,eACDT,QAAQ,CAChCM,+BADgC,CADP,wCACpBI,KADoB,eACbC,QADa,eAK3B,QAASC,CAAAA,QAAT,CACEC,GADF,CAEEC,KAFF,CAGQ,CACNH,QAAQ,CAAC,SAAAI,CAAC,wCACLA,CADK,wBAEPF,GAFO,CAEDC,KAFC,IAAF,CAAR,CAID,CAb0B,QAeZE,CAAAA,QAfY,kIAe3B,mIACEL,QAAQ,CAAC,SAAAI,CAAC,wCACLA,CADK,MAERE,SAAS,CAAE,KAFH,CAGRC,WAAW,CAAE,IAHL,IAAF,CAAR,CADF,sCAQUd,CAAAA,cAAc,CAACe,2BAAf,CAA2CT,KAAK,CAACU,KAAjD,CARV,QASIR,QAAQ,CAAC,gBAAD,CAAmB,IAAnB,CAAR,CATJ,+EAWID,QAAQ,CAAC,SAAAI,CAAC,wCACLA,CADK,MAERE,SAAS,CAAE,IAFH,CAGRC,WAAW,CAAE,KAHL,IAAF,CAAR,CAXJ,oEAf2B,2CAkC3B,mBACE,oBAAC,YAAD,EAAc,MAAM,CAAEV,MAAtB,CAA8B,QAAQ,CAAEC,QAAxC,CAAkD,MAAM,CAAC,gBAAzD,EACGC,KAAK,CAACW,cAAN,eACC,2BAAK,SAAS,CAAC,aAAf,eACE,yBAAG,SAAS,CAAC,uBAAb,EADF,cAEE,yGAFF,CAFJ,CAUG,CAACX,KAAK,CAACW,cAAP,eACC,oBAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,CAA6B,QAAQ,CAAEL,QAAvC,EACGN,KAAK,CAACO,SAAN,eACC,2BAAK,SAAS,CAAC,cAAf,kDAFJ,cAME,6BAAO,SAAS,CAAC,gBAAjB,eACE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,OAFd,CAGE,KAAK,CAAEP,KAAK,CAACU,KAHf,CAIE,QAAQ,CAAER,QAJZ,CAKE,IAAI,CAAC,OALP,EADF,cAQE,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EARF,CANF,cAgBE,8BACE,SAAS,CAAC,2BADZ,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAE,CAACF,KAAK,CAACU,KAHnB,WAhBF,CAXJ,CADF,CAuCD","sourcesContent":["import React, {useState} from 'react';\nimport {Icon} from '../../generic/icon';\nimport {Form, Input} from '../../generic/form';\nimport {sessionService} from '../../../services/session';\nimport {ModalOverlay} from '../../generic/modal/modal-overlay';\nimport {\n  defaultForgotPasswordModalState,\n  ForgotPasswordModalState,\n  ForgotPasswordModalProps,\n} from './ForgotPasswordModal.types';\n\nexport function ForgotPasswordModal({\n  isOpen,\n  onToggle,\n}: ForgotPasswordModalProps) {\n  const [state, setState] = useState<ForgotPasswordModalState>(\n    defaultForgotPasswordModalState\n  );\n\n  function setValue<K extends keyof ForgotPasswordModalState>(\n    key: K,\n    value: ForgotPasswordModalState[K]\n  ): void {\n    setState(_ => ({\n      ..._,\n      [key]: value,\n    }));\n  }\n\n  async function onSubmit(): Promise<void> {\n    setState(_ => ({\n      ..._,\n      showError: false,\n      showSpinner: true,\n    }));\n\n    try {\n      await sessionService.generateForgotPasswordToken(state.email);\n      setValue('showCompletion', true);\n    } catch {\n      setState(_ => ({\n        ..._,\n        showError: true,\n        showSpinner: false,\n      }));\n    }\n  }\n\n  return (\n    <ModalOverlay isOpen={isOpen} onToggle={onToggle} header=\"Password Reset\">\n      {state.showCompletion && (\n        <div className=\"text-center\">\n          <i className=\"fa fa-thumbs-up fa-3x\" />\n          <p>\n            Please check your inbox for an email containing your password reset\n            link.\n          </p>\n        </div>\n      )}\n      {!state.showCompletion && (\n        <Form className=\"login-form\" onSubmit={onSubmit}>\n          {state.showError && (\n            <div className=\"alert-danger\">\n              Your password could not be reset at this time\n            </div>\n          )}\n          <label className=\"username-input\">\n            <Input\n              name=\"email\"\n              placeholder=\"Email\"\n              value={state.email}\n              onChange={setValue}\n              type=\"email\"\n            />\n            <Icon type=\"email\" />\n          </label>\n          <button\n            className=\"rounded-button blue plain\"\n            type=\"submit\"\n            disabled={!state.email}\n          >\n            Submit\n          </button>\n        </Form>\n      )}\n    </ModalOverlay>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}