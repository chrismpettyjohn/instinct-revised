{"ast":null,"code":"import _toConsumableArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FormGroup}from'reactstrap';import{toast}from'react-toastify';import React,{useEffect,useState}from'react';import{EmulatorLayout}from'../EmulatorLayout';import{emulatorService,Form,Icon,Input,setURL}from'@instinct-prj/frontend';setURL('admin/emulator/settings',/*#__PURE__*/React.createElement(EmulatorSettings,null));export function EmulatorSettings(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),spinner=_useState2[0],setSpinner=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),settings=_useState6[0],setSettings=_useState6[1];useEffect(function(){function fetchSettings(){return _fetchSettings.apply(this,arguments);}function _fetchSettings(){_fetchSettings=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return emulatorService.getSettings();case 2:data=_context.sent;setSettings(data);case 4:case\"end\":return _context.stop();}}},_callee);}));return _fetchSettings.apply(this,arguments);}fetchSettings();},[]);function onChange(key,value){setSettings(function(_){var newSettings=_toConsumableArray(_);newSettings.find(function(_){return _.id===key;}).value=value;return newSettings;});}function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setSpinner(true);_context2.next=3;return emulatorService.updateSettings(settings.map(function(_){return{id:_.id,value:_.value};}));case 3:toast.info('Emulator settings have been updated');setSpinner(false);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _onSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(EmulatorLayout,null,/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"h2\",null,/*#__PURE__*/React.createElement(Icon,{type:\"wrench\"}),\"Emulator Settings\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},/*#__PURE__*/React.createElement(\"h4\",null,\"Filter By\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",value:filter,onChange:function onChange(e){return setFilter(e.target.value.toLowerCase());}}))),/*#__PURE__*/React.createElement(Form,{className:\"mt-2\",onSubmit:onSubmit},/*#__PURE__*/React.createElement(\"h3\",null,\"Server Options\"),!settings&&/*#__PURE__*/React.createElement(Icon,{className:\"fa-spin\",type:\"spinner\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"row\",style:{maxHeight:500,overflowY:'scroll'}},settings===null||settings===void 0?void 0:settings.filter(function(_){return _.label.toLowerCase().includes(filter);}).map(function(_){return/*#__PURE__*/React.createElement(FormGroup,{className:\"col-6\",key:_.id},/*#__PURE__*/React.createElement(\"h4\",null,_.label),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:_.id,value:_.value,onChange:onChange}));})),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-5 text-right\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-success\",disabled:spinner,type:\"submit\"},spinner?/*#__PURE__*/React.createElement(Icon,{className:\"fa-spin\",type:\"spinner\"}):/*#__PURE__*/React.createElement(React.Fragment,null,\"Save\")))));}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct/packages/frontend/admin/src/emulator/settings/EmulatorSettings.tsx"],"names":["FormGroup","toast","React","useEffect","useState","EmulatorLayout","emulatorService","Form","Icon","Input","setURL","EmulatorSettings","spinner","setSpinner","filter","setFilter","settings","setSettings","fetchSettings","getSettings","data","onChange","key","value","_","newSettings","find","id","onSubmit","updateSettings","map","info","e","target","toLowerCase","maxHeight","overflowY","label","includes"],"mappings":"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","sourcesContent":["import {FormGroup} from 'reactstrap';\nimport {toast} from 'react-toastify';\nimport React, {useEffect, useState} from 'react';\nimport {EmulatorLayout} from '../EmulatorLayout';\nimport {EmulatorSettings as EmulatorSettingsI} from '@instinct-prj/interface';\nimport {\n  emulatorService,\n  Form,\n  Icon,\n  Input,\n  setURL,\n} from '@instinct-prj/frontend';\n\nsetURL('admin/emulator/settings', <EmulatorSettings />);\n\nexport function EmulatorSettings() {\n  const [spinner, setSpinner] = useState(false);\n  const [filter, setFilter] = useState('');\n  const [settings, setSettings] = useState<EmulatorSettingsI>();\n\n  useEffect(() => {\n    async function fetchSettings() {\n      const data = await emulatorService.getSettings();\n      setSettings(data);\n    }\n    fetchSettings();\n  }, []);\n\n  function onChange(key: string, value: string) {\n    setSettings(_ => {\n      const newSettings = [..._!];\n      newSettings.find(_ => _.id === key)!.value = value;\n      return newSettings;\n    });\n  }\n\n  async function onSubmit() {\n    setSpinner(true);\n    await emulatorService.updateSettings(\n      settings!.map(_ => ({id: _.id, value: _.value}))\n    );\n    toast.info('Emulator settings have been updated');\n    setSpinner(false);\n  }\n\n  return (\n    <EmulatorLayout>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h2>\n            <Icon type=\"wrench\" />\n            Emulator Settings\n          </h2>\n        </div>\n        <div className=\"col-6\">\n          <h4>Filter By</h4>\n          <input\n            className=\"form-control\"\n            value={filter}\n            onChange={e => setFilter(e.target.value.toLowerCase())}\n          />\n        </div>\n      </div>\n      <Form className=\"mt-2\" onSubmit={onSubmit}>\n        <h3>Server Options</h3>\n        {!settings && <Icon className=\"fa-spin\" type=\"spinner\" />}\n        <div className=\"row\" style={{maxHeight: 500, overflowY: 'scroll'}}>\n          {settings\n            ?.filter(_ => _.label.toLowerCase().includes(filter))\n            .map(_ => (\n              <FormGroup className=\"col-6\" key={_.id}>\n                <h4>{_.label}</h4>\n                <Input\n                  type=\"text\"\n                  name={_.id}\n                  value={_.value}\n                  onChange={onChange}\n                />\n              </FormGroup>\n            ))}\n        </div>\n        <div className=\"mt-5 text-right\">\n          <button className=\"btn btn-success\" disabled={spinner} type=\"submit\">\n            {spinner ? <Icon className=\"fa-spin\" type=\"spinner\" /> : <>Save</>}\n          </button>\n        </div>\n      </Form>\n    </EmulatorLayout>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}