{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/cpettyjohn/Habbo/instinct-revised/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useContext,useEffect}from'react';import{configContext}from'../../../context/config';import{healthContext}from'../../../context/health';import{configService}from'../../../services/config';import{sessionContext}from'../../../context/session';import{sessionService}from'../../../services/session';var FIVE_MINUTE_IN_MS=300000000;var THIRTY_SECONDS_IN_MS=30000;export function DataPolling(){var _useContext=useContext(configContext),setConfig=_useContext.setConfig;var _useContext2=useContext(healthContext),setHealth=_useContext2.setHealth;var _useContext3=useContext(sessionContext),setUser=_useContext3.setUser;function refresh(){return _refresh.apply(this,arguments);}function _refresh(){_refresh=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,user,config,health;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all([sessionService.init(),configService.getConfig(),configService.getHealth()]);case 2:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,3);user=_yield$Promise$all2[0];config=_yield$Promise$all2[1];health=_yield$Promise$all2[2];setUser(user);setConfig(config);setHealth(health);case 10:case\"end\":return _context.stop();}}},_callee);}));return _refresh.apply(this,arguments);}function refreshHealth(){return _refreshHealth.apply(this,arguments);}function _refreshHealth(){_refreshHealth=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var health;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return configService.getHealth();case 2:health=_context2.sent;setHealth(health);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _refreshHealth.apply(this,arguments);}useEffect(function(){setInterval(refresh,FIVE_MINUTE_IN_MS);setInterval(refreshHealth,THIRTY_SECONDS_IN_MS);},[]);return null;}","map":{"version":3,"sources":["/Users/cpettyjohn/Habbo/instinct-revised/packages/frontend/frontend/src/components/utility/data-polling/DataPolling.tsx"],"names":["useContext","useEffect","configContext","healthContext","configService","sessionContext","sessionService","FIVE_MINUTE_IN_MS","THIRTY_SECONDS_IN_MS","DataPolling","setConfig","setHealth","setUser","refresh","Promise","all","init","getConfig","getHealth","user","config","health","refreshHealth","setInterval"],"mappings":"0dAAA,OAAQA,UAAR,CAAoBC,SAApB,KAAoC,OAApC,CACA,OAAQC,aAAR,KAA4B,yBAA5B,CACA,OAAQC,aAAR,KAA4B,yBAA5B,CACA,OAAQC,aAAR,KAA4B,0BAA5B,CACA,OAAQC,cAAR,KAA6B,0BAA7B,CACA,OAAQC,cAAR,KAA6B,2BAA7B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,SAA1B,CACA,GAAMC,CAAAA,oBAAoB,CAAG,KAA7B,CAEA,MAAO,SAASC,CAAAA,WAAT,EAAuB,iBACRT,UAAU,CAACE,aAAD,CADF,CACrBQ,SADqB,aACrBA,SADqB,kBAERV,UAAU,CAACG,aAAD,CAFF,CAErBQ,SAFqB,cAErBA,SAFqB,kBAGVX,UAAU,CAACK,cAAD,CAHA,CAGrBO,OAHqB,cAGrBA,OAHqB,SAKbC,CAAAA,OALa,+HAK5B,uNACuCC,CAAAA,OAAO,CAACC,GAAR,CAAY,CAC/CT,cAAc,CAACU,IAAf,EAD+C,CAE/CZ,aAAa,CAACa,SAAd,EAF+C,CAG/Cb,aAAa,CAACc,SAAd,EAH+C,CAAZ,CADvC,kGACSC,IADT,wBACeC,MADf,wBACuBC,MADvB,wBAOET,OAAO,CAACO,IAAD,CAAP,CACAT,SAAS,CAACU,MAAD,CAAT,CACAT,SAAS,CAACU,MAAD,CAAT,CATF,uDAL4B,kDAiBbC,CAAAA,aAjBa,iJAiB5B,0KACuBlB,CAAAA,aAAa,CAACc,SAAd,EADvB,QACQG,MADR,gBAEEV,SAAS,CAACU,MAAD,CAAT,CAFF,wDAjB4B,gDAsB5BpB,SAAS,CAAC,UAAM,CACdsB,WAAW,CAACV,OAAD,CAAUN,iBAAV,CAAX,CACAgB,WAAW,CAACD,aAAD,CAAgBd,oBAAhB,CAAX,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,MAAO,KAAP,CACD","sourcesContent":["import {useContext, useEffect} from 'react';\nimport {configContext} from '../../../context/config';\nimport {healthContext} from '../../../context/health';\nimport {configService} from '../../../services/config';\nimport {sessionContext} from '../../../context/session';\nimport {sessionService} from '../../../services/session';\n\nconst FIVE_MINUTE_IN_MS = 300000000;\nconst THIRTY_SECONDS_IN_MS = 30000;\n\nexport function DataPolling() {\n  const {setConfig} = useContext(configContext);\n  const {setHealth} = useContext(healthContext);\n  const {setUser} = useContext(sessionContext);\n\n  async function refresh(): Promise<void> {\n    const [user, config, health] = await Promise.all([\n      sessionService.init(),\n      configService.getConfig(),\n      configService.getHealth(),\n    ]);\n\n    setUser(user);\n    setConfig(config);\n    setHealth(health);\n  }\n\n  async function refreshHealth() {\n    const health = await configService.getHealth();\n    setHealth(health);\n  }\n\n  useEffect(() => {\n    setInterval(refresh, FIVE_MINUTE_IN_MS);\n    setInterval(refreshHealth, THIRTY_SECONDS_IN_MS);\n  }, []);\n\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}